version: "3.9"

services:
  # Infrastructure

  elasticsearch:
    image: elasticsearch:8.3.3
    container_name: otel-elasticsearch
    deploy:
      resources:
        limits:
          memory: 3g
    environment:
      http.host: 0.0.0.0
      transport.host: 127.0.0.1
      xpack.security.enabled: false
    ports:
      - "9200:9200"

  kibana:
    image: kibana:8.3.3
    container_name: otel-kibana
    depends_on:
      - elasticsearch
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
    ports:
      - "5601:5601"

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel-collector
    command: [ "--config=/etc/otel-collector-config.yaml" ]
    depends_on:
      - prometheus
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP http receiver
      - "55679:55679" # zpages extension
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml

  postgres:
    image: postgres
    container_name: otel-postgres
    environment:
      POSTGRES_PASSWORD: example
    ports:
      - "5432:5432"

  prometheus:
    image: prom/prometheus:latest
    container_name: otel-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml

  rabbitmq:
    image: rabbitmq:3.10.7-management
    container_name: otel-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"

  redis:
    image: redis
    container_name: otel-redis
    ports:
      - "6379:6379"

  # Application

  alpha:
    build:
      context: .
      dockerfile: ./Alpha/Dockerfile
    container_name: otel-alpha
    depends_on:
      - epsilon
      - mu
      - otel-collector
      - rabbitmq
    image: otel-alpha
    environment:
      ASPNETCORE_ENVIRONMENT: Docker
      ASPNETCORE_URLS: http://*:80
      OTEL_EXPORTER_OTLP_ENDPOINT: http://otel-collector:4317
      OTEL_EXPORTER_OTLP_PROTOCOL: grpc
    ports:
      - "5201:80"

  epsilon:
    build:
      context: .
      dockerfile: ./Epsilon/Dockerfile
    container_name: otel-epsilon
    depends_on:
      - elasticsearch
      - otel-collector
    image: otel-epsilon
    environment:
      ASPNETCORE_ENVIRONMENT: Docker
      ASPNETCORE_URLS: http://*:80
      OTEL_EXPORTER_OTLP_ENDPOINT: http://otel-collector:4317
      OTEL_EXPORTER_OTLP_PROTOCOL: grpc
    ports:
      - "5204:80"

  mu:
    build:
      context: .
      dockerfile: ./Mu/Dockerfile
    container_name: otel-mu
    depends_on:
      - otel-collector
      - rabbitmq
    image: otel-mu
    environment:
      ASPNETCORE_ENVIRONMENT: Docker
      ASPNETCORE_URLS: http://*:80
      OTEL_EXPORTER_OTLP_ENDPOINT: http://otel-collector:4317
      OTEL_EXPORTER_OTLP_PROTOCOL: grpc
    ports:
      - "5203:80"

  omicron:
    build:
      context: .
      dockerfile: ./Omicron/Dockerfile
    container_name: otel-omicron
    depends_on:
      - otel-collector
    image: otel-omicron
    environment:
      ASPNETCORE_ENVIRONMENT: Docker
      ASPNETCORE_URLS: http://*:80
      OTEL_EXPORTER_OTLP_ENDPOINT: http://otel-collector:4317
      OTEL_EXPORTER_OTLP_PROTOCOL: grpc
    ports:
      - "5200:80"

  sigma:
    build:
      context: .
      dockerfile: ./Sigma/Dockerfile
    container_name: otel-sigma
    depends_on:
      - otel-collector
      - postgres
      - redis
    image: otel-sigma
    environment:
      ASPNETCORE_ENVIRONMENT: Docker
      ASPNETCORE_URLS: http://*:80
      OTEL_EXPORTER_OTLP_ENDPOINT: http://otel-collector:4317
      OTEL_EXPORTER_OTLP_PROTOCOL: grpc
    ports:
      - "5202:80"