version: "3.9"

services:
  # Infrastructure

  elasticsearch:
    image: elasticsearch:8.3.3
    container_name: otel-elasticsearch
    deploy:
      resources:
        limits:
          memory: 3g
    environment:
      http.host: 0.0.0.0
      transport.host: 127.0.0.1
      xpack.security.enabled: false
    ports:
      - "9200:9200"

  kibana:
    image: kibana:8.3.3
    container_name: otel-kibana
    depends_on:
      - elasticsearch
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
    ports:
      - "5601:5601"

  datadog-agent:
    image: datadog/agent:latest
    container_name: datadog-agent
    pid: host
    environment:
      DD_SITE: <DD_SITE>
      DD_API_KEY: ${DD_API_KEY}
      DD_LOGS_ENABLED: true
      # DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL: true
      # DD_CONTAINER_EXCLUDE: "name:datadog-agent"
      DD_OTLP_CONFIG_RECEIVER_PROTOCOLS_GRPC_ENDPOINT: 0.0.0.0:4317
      DD_OTLP_CONFIG_RECEIVER_PROTOCOLS_HTTP_ENDPOINT: 0.0.0.0:4318
    ports:
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP http receiver    
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup:/host/sys/fs/cgroup:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro

  postgres:
    image: postgres
    container_name: otel-postgres
    environment:
      POSTGRES_PASSWORD: example
    ports:
      - "5432:5432"

  prometheus:
    image: prom/prometheus:latest
    container_name: otel-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml

  rabbitmq:
    image: rabbitmq:3.10.7-management
    container_name: otel-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"

  redis:
    image: redis
    container_name: otel-redis
    ports:
      - "6379:6379"

  # Application

  alpha:
    build:
      context: .
      dockerfile: ./Alpha/Dockerfile
    container_name: otel-alpha
    depends_on:
      - epsilon
      - mu
      - datadog-agent
      - rabbitmq
    image: otel-alpha
    environment:
      ASPNETCORE_ENVIRONMENT: Docker
      ASPNETCORE_URLS: http://*:80
      OTEL_EXPORTER_OTLP_ENDPOINT: http://datadog-agent:4317
      OTEL_EXPORTER_OTLP_PROTOCOL: grpc
    ports:
      - "5201:80"

  epsilon:
    build:
      context: .
      dockerfile: ./Epsilon/Dockerfile
    container_name: otel-epsilon
    depends_on:
      - elasticsearch
      - datadog-agent
    image: otel-epsilon
    environment:
      ASPNETCORE_ENVIRONMENT: Docker
      ASPNETCORE_URLS: http://*:80
      OTEL_EXPORTER_OTLP_ENDPOINT: http://datadog-agent:4317
      OTEL_EXPORTER_OTLP_PROTOCOL: grpc
    ports:
      - "5204:80"

  mu:
    build:
      context: .
      dockerfile: ./Mu/Dockerfile
    container_name: otel-mu
    depends_on:
      - datadog-agent
      - rabbitmq
    image: otel-mu
    environment:
      ASPNETCORE_ENVIRONMENT: Docker
      ASPNETCORE_URLS: http://*:80
      OTEL_EXPORTER_OTLP_ENDPOINT: http://datadog-agent:4317
      OTEL_EXPORTER_OTLP_PROTOCOL: grpc
    ports:
      - "5203:80"

  omicron:
    build:
      context: .
      dockerfile: ./Omicron/Dockerfile
    container_name: otel-omicron
    depends_on:
      - datadog-agent
    image: otel-omicron
    environment:
      ASPNETCORE_ENVIRONMENT: Docker
      ASPNETCORE_URLS: http://*:80
      OTEL_EXPORTER_OTLP_ENDPOINT: http://datadog-agent:4317
      OTEL_EXPORTER_OTLP_PROTOCOL: grpc
    ports:
      - "5200:80"

  sigma:
    build:
      context: .
      dockerfile: ./Sigma/Dockerfile
    container_name: otel-sigma
    depends_on:
      - datadog-agent
      - postgres
      - redis
    image: otel-sigma
    environment:
      ASPNETCORE_ENVIRONMENT: Docker
      ASPNETCORE_URLS: http://*:80
      OTEL_EXPORTER_OTLP_ENDPOINT: http://datadog-agent:4317
      OTEL_EXPORTER_OTLP_PROTOCOL: grpc
    ports:
      - "5202:80"